name: Restart ACA Services

on:
  workflow_dispatch:
    inputs:
      env:
        type: environment
        description: Environment
        required: true
        default: development
      app:
        type: choice
        description: Application
        required: true
        options:
          - Web
          - Celery
          - Celery-Beat
          - Flower
          - LOB
          - Stripe

jobs:
  configure:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.env }}
    outputs:
      RESOURCE_NAME: ${{ steps.configure-environment.outputs.RESOURCE_NAME }}
      RESOURCE_GROUP: ${{ steps.configure-environment.outputs.RESOURCE_GROUP }}
    steps:
      - name: Define Resource Map
        id: configure-environment
        run: |
          RESOURCE_NAMES_MAP='{
            "Web": "api",
            "Celery": "celery",
            "Celery-Beat": "celery-beat",
            "Flower": "celery-flower",
            "LOB": "lob",
            "Stripe": "stripe"
          }'
          
          ENVIRONMENTS_MAP='{
            "development": "dev",
            "qa": "qa",
            "training": "training",
            "production": "prod"
          }'
          
          ENVIRONMENT="$(echo $ENVIRONMENTS_MAP | jq -r .[\"${{ github.event.inputs.env }}\"])"
          APPLICATION="$(echo $RESOURCE_NAMES_MAP | jq -r .[\"${{ github.event.inputs.app }}\"])"
          
          RESOURCE_NAME="$ENVIRONMENT-$APPLICATION"
          RESOURCE_GROUP="agent-portal-$ENVIRONMENT-container-apps"
          
          echo "RESOURCE_NAME=$RESOURCE_NAME" >> $GITHUB_OUTPUT
          echo "RESOURCE_GROUP=$RESOURCE_GROUP" >> $GITHUB_OUTPUT
          echo "Selected resource: $RESOURCE_NAME; RG: $RESOURCE_GROUP"

  restart_container_app:
    if: contains(fromJSON('["development", "qa", "training"]'), github.event.inputs.env)
    runs-on: ubuntu-latest
    needs: configure
    environment: ${{ github.event.inputs.env }}
    permissions:
      id-token: write
      contents: read
      checks: write
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      - name: Get Active Revision's Name
        id: get_revision_name
        run: |
          #The container app is running in single revision mode hence the index 0 is used. 
          REVISION_NAME=$(az containerapp revision list -n ${{ needs.configure.outputs.RESOURCE_NAME }} -g ${{ needs.configure.outputs.RESOURCE_GROUP }} --query "[0].name")

          echo "REVISION_NAME=$REVISION_NAME" >> $GITHUB_OUTPUT

      - name: Restart Container App
        run: |
          az containerapp revision show -n ${{ needs.configure.outputs.RESOURCE_NAME }} -g ${{ needs.configure.outputs.RESOURCE_GROUP }} --revision ${{ steps.get_revision_name.outputs.REVISION_NAME }}
